{"version":3,"sources":["Playground.jsx","App.js","reportWebVitals.js","index.js"],"names":["Playground","x","y","blur","spread","color","opacity","useState","boxColor","setBoxColor","backgroundColor","setBackgroundColor","showBoxColorPicker","setShowBoxColorPicker","showBackgroundColorPicker","setShowBackgroundColorPicker","className","style","background","boxShadow","htmlFor","onClick","onChange","e","hex","App","setX","setY","setBlur","setSpread","setColor","showColorPicker","setShowColorPicker","Slider","min","max","value","event","val","marginLeft","marginRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad3ec20.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport \"./Playground.css\";\n\nfunction Playground({ x, y, blur, spread, opacity, color }) {\n  const [boxColor, setBoxColor] = useState(\"#dedede\");\n  const [backgroundColor, setBackgroundColor] = useState(\"#fff\");\n  let [showBoxColorPicker, setShowBoxColorPicker] = useState(false);\n  let [showBackgroundColorPicker, setShowBackgroundColorPicker] = useState(false);\n\n  return <div className=\"playground\">\n    <div className=\"playground-container\">\n\n      <div className=\"box-container\"\n        style={{ background: `${backgroundColor}`}}\n      >\n        <div className=\"box\"\n          style={{\n            boxShadow: `${x}px ${y}px ${blur}px ${spread}px ${color}`,\n            background: `${boxColor}`\n          }}\n        >\n        </div>\n      </div>\n\n      <div className=\"playground-controls-container\">\n        <div className=\"playground__controls\">\n\n         <div className=\"playground__control\">\n           <div className=\"color-container\">\n             <label htmlFor=\"label\">box color</label>\n             <div className=\"box-color-container\">\n               <button\n                 className=\"color-btn\"\n                 onClick={() => setShowBoxColorPicker(showBoxColorPicker = !showBoxColorPicker)}\n                 style={{background: `${boxColor}`}}\n               >\n               </button>\n               {showBoxColorPicker && (\n                 <ChromePicker\n                   className=\"chrome-picker-palette\"\n                   color={boxColor}\n                   onChange={e => setBoxColor(e.hex)}\n                 />\n               )}\n             </div>\n           </div>\n           <div className=\"value-container\">\n             <p>{boxColor}</p>\n           </div>\n         </div>\n\n        <div className=\"playground__control\">\n         <div className=\"color-container\">\n           <label htmlFor=\"label\">background color</label>\n           <div className=\"box-color-container\">\n             <button\n               className=\"color-btn\"\n               onClick={() => setShowBackgroundColorPicker(showBackgroundColorPicker = !showBackgroundColorPicker)}\n               style={{background: `${backgroundColor}`}}\n             >\n             </button>\n             {showBackgroundColorPicker && (\n               <ChromePicker\n                 className=\"chrome-picker-palette\"\n                 color={backgroundColor}\n                 onChange={e => setBackgroundColor(e.hex)}\n               />\n             )}\n           </div>\n         </div>\n         <div className=\"value-container\">\n           <p>{backgroundColor}</p>\n         </div>\n       </div>\n\n        </div>\n      </div>\n\n      <div className=\"code-output-container\">\n        <p>{`box-shadow: ${x}px ${y}px ${blur}px ${spread}px ${color};`}</p>\n      </div>\n\n    </div>\n  </div>;\n}\n\nexport default Playground\n","import { Slider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport './App.css';\nimport Playground from \"./Playground\";\n\nfunction App() {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [blur, setBlur] = useState(0);\n  const [spread, setSpread] = useState(0);\n  const [color, setColor] = useState('#000')\n  let [showColorPicker, setShowColorPicker] = useState(false)\n\n  return (\n    <div className=\"app\">\n      <Playground x={x} y={y} blur={blur} spread={spread} color={color}/>\n      <div className=\"app__controls\">\n        <div className=\"app__controlsContainer\">\n\n          <div className=\"app__control\">\n            <div className=\"slider-container\">\n              <label className=\"label\" htmlFor=\"label\">x-offset</label>\n              <Slider\n                min={-50}\n                max={50}\n                value={x}\n                onChange={(event, val) => setX(val)}\n                style={{marginLeft: 10, marginRight: 10}}\n              />\n            </div>\n            <div className=\"value-container\">\n              <p>{`${x}`}</p>\n            </div>\n          </div>\n\n          <div className=\"app__control\">\n            <div className=\"slider-container\">\n              <label className=\"label\" htmlFor=\"label\">y-offset</label>\n              <Slider\n                min={-50}\n                max={50}\n                value={y}\n                onChange={(event, val) => setY(val)}\n                style={{marginLeft: 10, marginRight: 10}}\n              />\n            </div>\n            <div className=\"value-container\">\n              <p>{`${y}`}</p>\n            </div>\n          </div>\n\n          <div className=\"app__control\">\n            <div className=\"slider-container\">\n              <label className=\"label\" htmlFor=\"label\">blur</label>\n              <Slider\n                min={0}\n                max={50}\n                value={blur}\n                onChange={(event, val) => setBlur(val)}\n                style={{marginLeft: 10, marginRight: 10}}\n              />\n            </div>\n            <div className=\"value-container\">\n              <p>{`${blur}`}</p>\n            </div>\n          </div>\n\n          <div className=\"app__control\">\n            <div className=\"slider-container\">\n              <label className=\"label\" htmlFor=\"label\">spread</label>\n              <Slider\n                min={0}\n                max={30}\n                value={spread}\n                onChange={(event, val) => setSpread(val)}\n                style={{marginLeft: 10, marginRight: 10}}\n              />\n            </div>\n            <div className=\"value-container\">\n              <p>{`${spread}`}</p>\n            </div>\n          </div>\n\n          <div className=\"app__control\">\n            <div className=\"slider-container\">\n              <label className=\"label\" htmlFor=\"label\">shadow color</label>\n              <div className=\"box-color-container\">\n                <button\n                  className=\"color-btn\"\n                  onClick={() => setShowColorPicker(showColorPicker = !showColorPicker)}\n                  style={{background: `${color}`}}\n                >\n                </button>\n                {showColorPicker && (\n                  <ChromePicker\n                    className=\"chrome-picker-palette\"\n                    color={color}\n                    onChange={e => setColor(e.hex)}\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"value-container\">\n              <p>{color}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}